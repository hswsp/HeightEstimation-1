name: "Texutre_LeNet_deploy"
input: "data"
input_shape{
  dim:1
  dim:1
  dim:32
  dim:32
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 9
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "sig1"
  type: "Sigmoid"
  bottom: "conv1"
  top: "conv1"
}
#layer {
#  name: "pool1"
#  type: "Pooling"
#  top: "pool1"
#  pooling_param {
#    pool: MAX
#    kernel_size: 2
#    stride: 2
#  }
#}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 9
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "sig2"
  type: "Sigmoid"
  bottom: "conv2"
   top: "conv2"
}
#layer {
#  name: "pool2"
#  type: "Pooling"
#  bottom: "conv2"
#  top: "pool2"
#  pooling_param {
#    pool: MAX
#    kernel_size: 2
#    stride: 2
#  }
#}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "conv2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "sig3"
  type: "Sigmoid"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "fc2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "sig4"
  type: "Sigmoid"
  bottom: "fc2"
  top: "fc2"
}
